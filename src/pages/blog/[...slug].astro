---
import Layout from "../../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import "../../styles/global.css";
import Whatsapp from "../../components/Whatsapp";

// Generate static paths for all blog posts
export async function getStaticPaths() {
  const blogPosts = await getCollection("blog");
  return blogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// Get the current post from props
type Props = {
  post: CollectionEntry<"blog">;
};

const { post } = Astro.props;
const { Content } = await post.render();

// Format date helper
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};

// SEO meta data
const title = `${post.data.title} | UNV Dubai Blog`;
const description = post.data.description;
const canonicalUrl = new URL(`/blog/${post.slug}`, Astro.site);

// Get related posts (excluding current post)
const allPosts = await getCollection("blog");
const relatedPosts = allPosts
  .filter(p => p.slug !== post.slug)
  .slice(0, 3);
---

<Layout
  title={title}
  description={description}
  canonical={canonicalUrl.toString()}
>
  <!-- Professional Navigation Header -->
  <header class="sticky top-0 z-50 bg-white/95 backdrop-blur-md border-b border-slate-200 transition-all duration-300 ease-out" data-animate>
    <div class="container mx-auto px-6 py-4">
      <!-- Breadcrumb -->
      <nav class="flex items-center space-x-2 text-sm text-slate-600">
        <a href="/" class="hover:text-slate-900 transition-colors duration-200 font-medium">Home</a>
        <svg class="w-4 h-4 text-slate-400" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
        </svg>
        <a href="/blog" class="hover:text-slate-900 transition-colors duration-200 font-medium">Blog</a>
        <svg class="w-4 h-4 text-slate-400" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
        </svg>
        <span class="text-slate-900 font-semibold">{post.data.title}</span>
      </nav>
    </div>
  </header>

  <!-- Main Content -->
  <main class="bg-slate-50 min-h-screen">
    <div class="container mx-auto px-6 py-12">
      <div class="max-w-4xl mx-auto">
        <!-- Article Header -->
        <div class="text-center mb-16" data-animate data-animate-delay="100">
          <!-- Category Badge -->
          <div class="inline-flex items-center px-4 py-2 rounded-lg bg-slate-100 border border-slate-200 mb-8 transition-all duration-300 ease-out hover:bg-slate-200">
            <svg class="w-4 h-4 text-slate-600 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            <span class="text-slate-700 font-semibold text-sm tracking-wide uppercase">Security Technology</span>
          </div>
          
          <!-- Article Title -->
          <h1 class="text-4xl md:text-5xl font-bold text-slate-900 mb-8 leading-tight max-w-4xl mx-auto" data-animate data-animate-delay="200">
            {post.data.title}
          </h1>
          
          <!-- Article Meta -->
          <div class="flex flex-col sm:flex-row items-center justify-center space-y-6 sm:space-y-0 sm:space-x-8 text-slate-600 mb-8" data-animate data-animate-delay="300">
            <!-- Author Info -->
            <div class="flex items-center space-x-4">
              {post.data.authorImage && (
                <div class="relative">
                  <img
                    src={post.data.authorImage.src}
                    alt={post.data.authorImageAlt}
                    class="w-12 h-12 rounded-full border-2 border-slate-200 shadow-sm"
                    loading="lazy"
                    decoding="async"
                  />
                </div>
              )}
              <div class="text-left">
                <p class="font-semibold text-slate-900">{post.data.author}</p>
                {post.data.role && (
                  <p class="text-sm text-slate-500">{post.data.role}</p>
                )}
              </div>
            </div>
            
            <!-- Date and Read Time -->
            <div class="flex items-center space-x-8 text-sm">
              <div class="flex items-center">
                <svg class="w-4 h-4 mr-2 text-slate-500" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                </svg>
                <time class="font-medium">{formatDate(post.data.pubDate)}</time>
              </div>
              <div class="flex items-center">
                <svg class="w-4 h-4 mr-2 text-slate-500" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"/>
                  <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"/>
                </svg>
                <span class="font-medium">{post.data.readTime} min read</span>
              </div>
            </div>
          </div>
          
          <!-- Tags -->
          {post.data.tags && (
            <div class="flex flex-wrap justify-center gap-2 mb-8" data-animate data-animate-delay="400">
              {post.data.tags.map((tag, index) => (
                <span 
                  class="px-3 py-1 bg-white text-slate-600 text-sm rounded-md border border-slate-200 font-medium transition-all duration-200 ease-out hover:bg-slate-100 hover:border-slate-300"
                  data-animate data-animate-delay={100 + (index * 50)}
                >
                  #{tag}
                </span>
              ))}
            </div>
          )}
        </div>

        <!-- Featured Image -->
        {post.data.cardImage && (
          <div class="relative rounded-xl overflow-hidden shadow-lg mb-16 transition-all duration-300 ease-out hover:shadow-xl" data-animate data-animate-delay="500">
            <img
              src={post.data.cardImage.src}
              alt={post.data.cardImageAlt}
              class="w-full h-96 object-cover"
              loading="lazy"
              decoding="async"
            />
          </div>
        )}
        
        <!-- Article Content -->
        <article class="bg-white rounded-xl shadow-sm p-12 mb-16 border border-slate-200" data-animate data-animate-delay="600">
          <!-- Article Description -->
          <div class="prose prose-lg max-w-none mb-12">
            <p class="text-xl text-slate-700 leading-relaxed border-l-4 border-slate-900 pl-6 bg-slate-50 py-6 rounded-r-lg font-medium">
              {post.data.description}
            </p>
          </div>
          
          <!-- Article Body -->
          <div class="prose prose-lg prose-slate max-w-none">
            <Content />
          </div>
          
          <!-- Article Contents/Summary -->
          {post.data.contents && (
            <div class="mt-16 p-8 bg-slate-50 rounded-xl border border-slate-200" data-animate data-animate-delay="700">
              <h3 class="text-2xl font-bold text-slate-900 mb-6 flex items-center">
                <svg class="w-6 h-6 mr-3 text-slate-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"/>
                </svg>
                Key Points Covered
              </h3>
              <ul class="space-y-3">
                {post.data.contents.map((content, index) => (
                  <li class="flex items-start p-2 rounded-lg transition-all duration-200 ease-out hover:bg-white" data-animate data-animate-delay={700 + (index * 100)}>
                    <svg class="w-5 h-5 text-slate-600 mt-0.5 mr-3 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                    </svg>
                    <span class="text-slate-700 font-medium">{content}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}
        </article>
        
        <!-- Professional Share Section -->
       <div class="bg-white rounded-xl shadow-sm border border-slate-200 p-8 mb-16">
  <div class="text-center">
    <h3 class="text-2xl font-semibold text-slate-900 mb-6">Share This Article</h3>
    <div class="flex flex-col sm:flex-row justify-center items-center gap-4">
      <a
        href={`https://twitter.com/intent/tweet?url=${canonicalUrl}&text=${encodeURIComponent(post.data.title)}`}
        target="_blank"
        rel="noopener noreferrer"
        class="flex items-center justify-center px-6 py-3 bg-slate-900 text-white rounded-lg transition-all duration-200 ease-out hover:bg-slate-800 min-w-[130px] font-medium"
      >
        <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
          <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
        </svg>
        Twitter
      </a>
      
      <a
        href={`https://www.linkedin.com/sharing/share-offsite/?url=${canonicalUrl}`}
        target="_blank"
        rel="noopener noreferrer"
        class="flex items-center justify-center px-6 py-3 bg-blue-700 text-white rounded-lg transition-all duration-200 ease-out hover:bg-blue-800 min-w-[130px] font-medium"
      >
        <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
          <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
        </svg>
        LinkedIn
      </a>
      
      <button
        onclick="navigator.share && navigator.share({title: document.title, url: window.location.href}) || copyToClipboard(window.location.href)"
        class="flex items-center justify-center px-6 py-3 bg-slate-600 text-white rounded-lg transition-all duration-200 ease-out hover:bg-slate-700 min-w-[130px] font-medium"
      >
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"/>
        </svg>
        Share
      </button>
    </div>
  </div>
</div>
      </div>
    </div>
    
    <!-- Professional Related Posts Section -->
    {relatedPosts.length > 0 && (
      <section class="bg-white py-20 border-t border-slate-200" data-animate>
        <div class="container mx-auto px-6">
          <div class="text-center mb-16" data-animate data-animate-delay="100">
            <h2 class="text-4xl font-bold text-slate-900 mb-4">
              Related Articles
            </h2>
            <p class="text-lg text-slate-600 max-w-2xl mx-auto">
              Explore more insights and expertise from our knowledge base
            </p>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto">
            {relatedPosts.map((relatedPost, index) => (
              <article 
                class="bg-white rounded-xl shadow-sm border border-slate-200 overflow-hidden transition-all duration-300 ease-out hover:shadow-md hover:-translate-y-1"
                data-animate data-animate-delay={200 + (index * 150)}
              >
                <div class="relative overflow-hidden">
                  {relatedPost.data.cardImage && (
                    <div class="relative h-48 overflow-hidden">
                      <img
                        src={relatedPost.data.cardImage.src}
                        alt={relatedPost.data.cardImageAlt}
                        class="w-full h-full object-cover transition-transform duration-300 ease-out hover:scale-105"
                        loading="lazy"
                        decoding="async"
                      />
                    </div>
                  )}
                  
                  <div class="p-6">
                    <div class="flex items-center justify-between mb-4 text-sm text-slate-500">
                      <time class="font-medium">{formatDate(relatedPost.data.pubDate)}</time>
                      <span class="bg-slate-100 px-3 py-1 rounded-full font-medium">{relatedPost.data.readTime} min read</span>
                    </div>
                    
                    <h3 class="text-xl font-bold text-slate-900 mb-3 line-clamp-2 leading-tight">
                      {relatedPost.data.title}
                    </h3>
                    
                    <p class="text-slate-600 mb-4 line-clamp-2 leading-relaxed">
                      {relatedPost.data.description}
                    </p>
                    
                    <a 
                      href={`/blog/${relatedPost.slug}`}
                      class="inline-flex items-center text-slate-900 font-semibold transition-all duration-200 ease-out hover:text-slate-700"
                    >
                      Read Article
                      <svg class="w-4 h-4 ml-2 transition-transform duration-200 ease-out hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
                      </svg>
                    </a>
                  </div>
                </div>
              </article>
            ))}
          </div>
        </div>
      </section>
    )}
    
    <Whatsapp client:load />
  </main>
</Layout>

<script is:inline>
  // Clipboard fallback function
  function copyToClipboard(text) {
    if (navigator.clipboard && window.isSecureContext) {
      navigator.clipboard.writeText(text).then(() => {
        showNotification('Link copied to clipboard!');
      });
    } else {
      // Fallback for older browsers
      const textArea = document.createElement('textarea');
      textArea.value = text;
      textArea.style.position = 'fixed';
      textArea.style.left = '-999999px';
      textArea.style.top = '-999999px';
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      try {
        document.execCommand('copy');
        showNotification('Link copied to clipboard!');
      } catch (err) {
        console.error('Failed to copy text: ', err);
        showNotification('Failed to copy link');
      }
      textArea.remove();
    }
  }

  // Professional notification function
  function showNotification(message) {
    const notification = document.createElement('div');
    notification.textContent = message;
    notification.className = 'fixed top-4 right-4 bg-slate-900 text-white px-6 py-3 rounded-lg shadow-lg z-50 transform translate-x-full transition-all duration-300 ease-out';
    document.body.appendChild(notification);
    
    // Force reflow
    void notification.offsetWidth;
    
    notification.style.transform = 'translateX(0)';
    
    setTimeout(() => {
      notification.style.transform = 'translateX(120%)';
      setTimeout(() => notification.remove(), 300);
    }, 3000);
  }

  document.addEventListener('DOMContentLoaded', () => {
    // Intersection Observer
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-visible');
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);
    
    // Observe all elements with data-animate attribute
    document.querySelectorAll('[data-animate]').forEach((el) => {
      observer.observe(el);
    });
    
    // Reading progress bar
    const progressBar = document.createElement('div');
    progressBar.className = 'fixed top-0 left-0 h-1 bg-slate-900 z-50 transition-all duration-300 ease-out';
    progressBar.style.width = '0%';
    progressBar.style.opacity = '0';
    document.body.appendChild(progressBar);
    
    const updateProgressBar = () => {
      const scrollTop = window.scrollY;
      const docHeight = document.body.offsetHeight - window.innerHeight;
      const scrollPercent = (scrollTop / docHeight) * 100;
      
      progressBar.style.width = scrollPercent + '%';
      progressBar.style.opacity = scrollPercent > 5 ? '1' : '0';
    };
    
    window.addEventListener('scroll', updateProgressBar);
  });
  
  // Make functions globally available
  window.copyToClipboard = copyToClipboard;
  window.showNotification = showNotification;
</script>

<style is:global>
  /* Professional base styles */
  * {
    transition-property: color, background-color, border-color, text-decoration-color, 
                         fill, stroke, opacity, box-shadow, transform, filter;
    transition-timing-function: ease-out;
    transition-duration: 200ms;
  }

  /* Typography improvements */
  h1, h2, h3, h4, h5, h6 {
    font-weight: 700;
    line-height: 1.2;
    color: #0f172a;
  }

  p {
    line-height: 1.7;
    color: #475569;
  }

  /* Animation classes */
  [data-animate] {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 600ms ease-out, transform 600ms ease-out;
  }

  [data-animate].animate-visible {
    opacity: 1;
    transform: translateY(0);
  }

  /* Staggered animations */
  [data-animate-delay="100"] { transition-delay: 100ms; }
  [data-animate-delay="200"] { transition-delay: 200ms; }
  [data-animate-delay="300"] { transition-delay: 300ms; }
  [data-animate-delay="400"] { transition-delay: 400ms; }
  [data-animate-delay="500"] { transition-delay: 500ms; }
  [data-animate-delay="600"] { transition-delay: 600ms; }
  [data-animate-delay="700"] { transition-delay: 700ms; }
  [data-animate-delay="800"] { transition-delay: 800ms; }
  [data-animate-delay="900"] { transition-delay: 900ms; }
  [data-animate-delay="1000"] { transition-delay: 1000ms; }

  /* Professional prose styling */
  .prose {
    color: #475569;
  }

  .prose h1, .prose h2, .prose h3, .prose h4 {
    color: #0f172a;
    font-weight: 700;
  }

  .prose a {
    color: #1e40af;
    text-decoration: underline;
    text-decoration-color: transparent;
    transition: text-decoration-color 200ms ease-out;
  }

  .prose a:hover {
    text-decoration-color: #1e40af;
  }

  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }

  /* Line clamping utility */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>