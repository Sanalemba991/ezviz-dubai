---
import Layout from "../../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import "../../styles/global.css";
import Whatsapp from "../../components/Whatsapp";

// Generate static paths for all blog posts
export async function getStaticPaths() {
  const blogPosts = await getCollection("blog");
  return blogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// Get the current post from props
type Props = {
  post: CollectionEntry<"blog">;
};

const { post } = Astro.props;
const { Content } = await post.render();

// Format date helper
const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};

// SEO meta data
const title = `${post.data.title} | UNV Dubai Blog`;
const description = post.data.description;
const canonicalUrl = new URL(`/blog/${post.slug}`, Astro.site);

// Get related posts (excluding current post)
const allPosts = await getCollection("blog");
const relatedPosts = allPosts
  .filter(p => p.slug !== post.slug)
  .slice(0, 3);
---

<Layout
  title={title}
  description={description}
  canonical={canonicalUrl.toString()}
>
  <!-- Hero Section -->
  <section class="relative bg-gradient-to-br from-slate-900 via-blue-900 to-slate-800 overflow-hidden">
    <!-- Background Pattern -->
    <div class="absolute inset-0 opacity-10">
      <div class="absolute inset-0" style="background-image: radial-gradient(circle at 1px 1px, rgba(255,255,255,0.15) 1px, transparent 0); background-size: 50px 50px;"></div>
    </div>
    
    <!-- Animated Background Elements -->
    <div class="absolute top-20 left-10 w-20 h-20 bg-blue-500 rounded-full opacity-20 animate-pulse-slow"></div>
    <div class="absolute bottom-20 right-10 w-32 h-32 bg-indigo-400 rounded-full opacity-15 animate-float"></div>
    
    <div class="relative container mx-auto px-4 py-16">
      <!-- Breadcrumb -->
      <nav class="flex items-center space-x-2 text-sm text-slate-300 mb-8 animate-fade-in">
        <a href="/" class="hover:text-white transition-colors">Home</a>
        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
        </svg>
        <a href="/blog" class="hover:text-white transition-colors">Blog</a>
        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
        </svg>
        <span class="text-blue-300">{post.data.title}</span>
      </nav>
      
      <div class="max-w-4xl mx-auto text-center">
        <!-- Category Badge -->
        <div class="inline-flex items-center px-4 py-2 rounded-full bg-blue-600/20 border border-blue-400/30 backdrop-blur-sm mb-6 animate-fade-in">
          <svg class="w-4 h-4 text-blue-400 mr-2" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
          <span class="text-blue-200 text-sm font-medium">Security Technology</span>
        </div>
        
        <!-- Article Title -->
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-6 leading-tight animate-slide-up">
          {post.data.title}
        </h1>
        
        <!-- Article Meta -->
        <div class="flex flex-col sm:flex-row items-center justify-center space-y-4 sm:space-y-0 sm:space-x-8 text-slate-300 mb-8 animate-slide-up-delay">
          <!-- Author Info -->
          <div class="flex items-center space-x-3">
            {post.data.authorImage && (
              <div class="relative">
                <img
                  src={post.data.authorImage.src}
                  alt={post.data.authorImageAlt}
                  class="w-12 h-12 rounded-full border-2 border-blue-400/50 shadow-lg"
                />
                <div class="absolute -bottom-1 -right-1 w-4 h-4 bg-green-500 rounded-full border-2 border-slate-900"></div>
              </div>
            )}
            <div class="text-left">
              <p class="font-semibold text-white">{post.data.author}</p>
              {post.data.role && (
                <p class="text-sm text-slate-400">{post.data.role}</p>
              )}
            </div>
          </div>
          
          <!-- Date and Read Time -->
          <div class="flex items-center space-x-6 text-sm">
            <div class="flex items-center">
              <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
              </svg>
              <time>{formatDate(post.data.pubDate)}</time>
            </div>
            <div class="flex items-center">
              <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"/>
                <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"/>
              </svg>
              <span>{post.data.readTime} min read</span>
            </div>
          </div>
        </div>
        
        <!-- Tags -->
        {post.data.tags && (
          <div class="flex flex-wrap justify-center gap-2 mb-8 animate-fade-in-delay">
            {post.data.tags.map((tag) => (
              <span class="px-3 py-1 bg-slate-700/50 text-slate-300 text-sm rounded-full backdrop-blur-sm border border-slate-600/50">
                #{tag}
              </span>
            ))}
          </div>
        )}
      </div>
    </div>
    
    <!-- Bottom Wave -->
    <div class="absolute bottom-0 left-0 right-0">
      <svg viewBox="0 0 1200 120" preserveAspectRatio="none" class="w-full h-12 fill-white">
        <path d="M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z"></path>
      </svg>
    </div>
  </section>

  <!-- Main Content -->
  <main class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-16">
      <div class="max-w-4xl mx-auto">
        <!-- Featured Image -->
        {post.data.cardImage && (
          <div class="relative rounded-2xl overflow-hidden shadow-2xl mb-12 animate-fade-in">
            <img
              src={post.data.cardImage.src}
              alt={post.data.cardImageAlt}
              class="w-full h-96 object-cover"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"></div>
          </div>
        )}
        
        <!-- Article Content -->
        <article class="bg-white rounded-2xl shadow-lg p-8 md:p-12 mb-12 animate-slide-up">
          <!-- Article Description -->
          <div class="prose prose-lg max-w-none mb-8">
            <p class="text-xl text-gray-600 leading-relaxed border-l-4 border-blue-500 pl-6 italic">
              {post.data.description}
            </p>
          </div>
          
          <!-- Article Body -->
          <div class="prose prose-lg prose-blue max-w-none">
            <Content />
          </div>
          
          <!-- Article Contents/Summary -->
          {post.data.contents && (
            <div class="mt-12 p-6 bg-blue-50 rounded-xl border border-blue-200">
              <h3 class="text-xl font-semibold text-gray-900 mb-4 flex items-center">
                <svg class="w-5 h-5 mr-2 text-blue-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"/>
                </svg>
                Key Points Covered
              </h3>
              <ul class="space-y-2">
                {post.data.contents.map((content) => (
                  <li class="flex items-start">
                    <svg class="w-5 h-5 text-blue-600 mt-0.5 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                      <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
                    </svg>
                    <span class="text-gray-700">{content}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}
        </article>
        
        <!-- Share Section -->
        <div class="bg-white rounded-2xl shadow-lg p-8 mb-12 animate-fade-in">
          <div class="text-center">
            <h3 class="text-2xl font-bold text-gray-900 mb-4">Share This Article</h3>
            <div class="flex justify-center space-x-4">
              <a
                href={`https://twitter.com/intent/tweet?url=${canonicalUrl}&text=${encodeURIComponent(post.data.title)}`}
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center px-6 py-3 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors duration-300"
              >
                <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
                Twitter
              </a>
              
              <a
                href={`https://www.linkedin.com/sharing/share-offsite/?url=${canonicalUrl}`}
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center px-6 py-3 bg-blue-700 hover:bg-blue-800 text-white rounded-lg transition-colors duration-300"
              >
                <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                </svg>
                LinkedIn
              </a>
              
              <button
                onclick="navigator.share({title: document.title, url: window.location.href})"
                class="flex items-center px-6 py-3 bg-gray-700 hover:bg-gray-800 text-white rounded-lg transition-colors duration-300"
              >
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"/>
                </svg>
                Share
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Related Posts Section -->
    {relatedPosts.length > 0 && (
      <section class="bg-gray-100 py-16">
        <div class="container mx-auto px-4">
          <div class="text-center mb-12">
            <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              Related Articles
            </h2>
            <div class="w-24 h-1 bg-gradient-to-r from-blue-600 to-cyan-500 mx-auto"></div>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
            {relatedPosts.map((relatedPost, index) => (
              <article 
                class="group bg-white rounded-xl shadow-lg hover:shadow-xl overflow-hidden transition-all duration-300 transform hover:-translate-y-1"
                style={`animation-delay: ${index * 200}ms`}
              >
                <div class="relative overflow-hidden">
                  {relatedPost.data.cardImage && (
                    <div class="relative h-48 overflow-hidden">
                      <img
                        src={relatedPost.data.cardImage.src}
                        alt={relatedPost.data.cardImageAlt}
                        class="w-full h-full object-cover transform transition-transform duration-300 group-hover:scale-110"
                      />
                      <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent"></div>
                    </div>
                  )}
                  
                  <div class="p-6">
                    <div class="flex items-center justify-between mb-3 text-sm text-gray-500">
                      <time>{formatDate(relatedPost.data.pubDate)}</time>
                      <span>{relatedPost.data.readTime} min read</span>
                    </div>
                    
                    <h3 class="text-xl font-bold text-gray-900 mb-3 group-hover:text-blue-600 transition-colors duration-300 line-clamp-2">
                      {relatedPost.data.title}
                    </h3>
                    
                    <p class="text-gray-600 mb-4 line-clamp-2">
                      {relatedPost.data.description}
                    </p>
                    
                    <a 
                      href={`/blog/${relatedPost.slug}`}
                      class="inline-flex items-center text-blue-600 hover:text-blue-700 font-semibold group/link transition-colors duration-300"
                    >
                      Read Article
                      <svg class="w-4 h-4 ml-1 transform group-hover/link:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
                      </svg>
                    </a>
                  </div>
                </div>
              </article>
            ))}
          </div>
        </div>
      </section>
    )}
    
    <Whatsapp client:load />
  </main>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Enhanced Intersection Observer for animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('show');
          observer.unobserve(entry.target);
        }
      });
    }, observerOptions);
    
    // Observe all animated elements
    document.querySelectorAll('.animate-fade-in, .animate-slide-up, .animate-fade-in-delay, .animate-slide-up-delay').forEach((el) => {
      observer.observe(el);
    });
    
    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
          target.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
        }
      });
    });
    
    // Copy URL functionality
    const copyButton = document.getElementById('copy-url');
    if (copyButton) {
      copyButton.addEventListener('click', () => {
        navigator.clipboard.writeText(window.location.href).then(() => {
          copyButton.textContent = 'Copied!';
          setTimeout(() => {
            copyButton.textContent = 'Copy URL';
          }, 2000);
        });
      });
    }
    
    // Reading progress indicator
    const progressBar = document.createElement('div');
    progressBar.className = 'fixed top-0 left-0 h-1 bg-blue-600 z-50 transition-all duration-150';
    document.body.appendChild(progressBar);
    
    window.addEventListener('scroll', () => {
      const scrollTop = window.pageYOffset;
      const docHeight = document.body.offsetHeight - window.innerHeight;
      const scrollPercent = (scrollTop / docHeight) * 100;
      progressBar.style.width = scrollPercent + '%';
    });
  });
</script>

<style>
  /* Enhanced CSS Animations */
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(30px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  @keyframes slideUp {
    from { opacity: 0; transform: translateY(50px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-20px); }
  }
  
  @keyframes pulseGlow {
    0%, 100% { 
      box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
      transform: scale(1);
    }
    50% { 
      box-shadow: 0 0 0 20px rgba(59, 130, 246, 0);
      transform: scale(1.05);
    }
  }
  
  /* Animation Classes */
  .animate-fade-in {
    opacity: 0;
    animation: fadeIn 1s ease-out forwards;
  }
  
  .animate-fade-in-delay {
    opacity: 0;
    animation: fadeIn 1s ease-out 0.5s forwards;
  }
  
  .animate-slide-up {
    opacity: 0;
    animation: slideUp 1s ease-out forwards;
  }
  
  .animate-slide-up-delay {
    opacity: 0;
    animation: slideUp 1s ease-out 0.3s forwards;
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .animate-pulse-slow {
    animation: pulseGlow 4s ease-in-out infinite;
  }
  
  /* Text line clamping */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Prose styling for blog content */
  .prose {
    color: #374151;
    max-width: none;
  }
  
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    color: #111827;
    font-weight: 700;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  
  .prose h1 { font-size: 2rem; }
  .prose h2 { font-size: 1.75rem; }
  .prose h3 { font-size: 1.5rem; }
  .prose h4 { font-size: 1.25rem; }
  
  .prose p {
    margin-bottom: 1.5rem;
    line-height: 1.75;
  }
  
  .prose a {
    color: #2563eb;
    text-decoration: underline;
    font-weight: 500;
  }
  
  .prose a:hover {
    color: #1d4ed8;
  }
  
  .prose ul, .prose ol {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }
  
  .prose li {
    margin-bottom: 0.5rem;
  }
  
  .prose blockquote {
    border-left: 4px solid #e5e7eb;
    padding-left: 1rem;
    font-style: italic;
    color: #6b7280;
    margin: 1.5rem 0;
  }
  
  .prose code {
    background-color: #f3f4f6;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
    color: #ef4444;
  }
  
  .prose pre {
    background-color: #1f2937;
    color: #f9fafb;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 1.5rem 0;
  }
  
  .prose img {
    border-radius: 0.5rem;
    margin: 1.5rem 0;
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
  }
  
  /* Scroll behavior */
  html {
    scroll-behavior: smooth;
  }
  
  /* Focus styles for accessibility */
  a:focus,
  button:focus {
    outline: 2px solid #3B82F6;
    outline-offset: 2px;
  }
</style>